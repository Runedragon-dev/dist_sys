name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21
      
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Go linters
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run Go linters
        run: golangci-lint run ./...

      - name: Install Python linters
        run: pip install flake8

      - name: Run Python linters
        run: flake8 .

  static-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Go staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest && staticcheck ./...

      - name: Install Python static analyzer
        run: pip install mypy

      - name: Run mypy
        run: mypy .

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint, static-analysis]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Go unit tests
        run: go test -v ./...

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Python unit tests
        run: pytest --disable-warnings

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run Go integration tests
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        run: go test -tags=integration -v ./...

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run Python integration tests
        env:
          DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
        run: pytest -m integration

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: [integration-tests]
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          docker-compose up -d
          sleep 10 # Даем время сервисам запуститься

      - name: Run E2E tests
        run: pytest -m e2e
